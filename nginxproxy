#!/usr/bin/env php
<?php

$doma
$ip = $argv[2];
$domain = $argv[1];
$port = $argv[3];
$dir = getcwd();
if (!is_writable($dir)) {
    echo 'There is not permission to write here';
    exit(2);
}
if ($argc === 1 || $argc > 4 || $argv[1] === "--help") {
    echo "usage: ls domain destination ip port\n";
} elseif ($argc === 4) {

    $data = join(" ",$argv);
    $re = '/.+(\.php)\s(\D+\.(nobelnet\.dk))\s(\d{1,3}\.){3}(\d{1,3})\s\b([0-9]{1,4}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])\b/mi';
    $str = join(" ", $argv);
    $res = preg_match($re, $str);
    if ($res === false || $res === 0) {
        echo "Invalid input...\nExmaple: nginxproxy test.nobelnet.dk 127.0.0.1 80\n";
        exit(1);
    }




    $content = <<<EOD
server {
    listen 80;
    server_name $domain;
    location / {
        proxy_buffer_size   128k;
        proxy_buffers   4 256k;
        proxy_busy_buffers_size   256k;
        proxy_pass http://$ip:$port/;
        proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header Host \$host;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    }
}
EOD;


    file_put_contents("$dir/00.$domain", $content);

echo "Done, now reload nginx!\n";
    $message   =  "Do you want to restart nginx? [y/N]";
    print $message;
    flush();
    ob_flush();
    $confirmation  =  trim( fgets( STDIN ) );
    if ( $confirmation !== 'y' ) {
        exec("systemctl nginx restart");
        echo "Restarted Nginx!\n";
    }
exit(0);


}


